@import '../util/mixins';

.u-container {
    border: 1px solid red;
}
.u-container\.item {
    border: 1px solid blue;
}

@include parent-mixin(u-container) {

    // defaults

    width: 100%;
    display: flex;
    flex-wrap: wrap;
    flex-direction: row;
    padding: 0;

    // display

    @include modifier-mixin(hide) {
        display: none;
    }

    // flex-wrap

    @include modifier-mixin(nowrap) {
        flex-wrap: nowrap;
    }

    // padding

    @each $key, $val in $container-gutters {
        @include modifier-mixin(gutter-#{$key}) {
            flex-wrap: $val;

            @include child-dest-mixin('<' x) {
                display: inline;
            }
        }
    }

    //@include modifier-mixin(gutter-1) {
    //    padding: 0.5rem;
    //}
    //    @include child-gt-mixin('@at-root', width) {
    //        width: 100%;
    //    }
    //}
    //
    //@include modifier-mixin(gutter-1) {
    //    & > * {
    //        margin: 1rem;
    //    }
    //}
    //
    //@include modifier-mixin(gutter-2) {
    //    & > * {
    //        margin: 2rem;
    //    }
    //}

    // max-width

    @include modifier-mixin(width-cap) {
        max-width: $container-width-cap;
    }

    // background-color

    @include modifier-mixin(bg-black) {
        background-color: $container-color-black;
    }

    @include modifier-mixin(bg-gray) {
        background-color: $container-color-black;
    }

   // flex-direction & flex-wrap

    //@include modifier(items-lr) {
    //    flex-direction: row;
    //    flex-wrap: nowrap;
    //}
    //
    //@include modifier(items-lr-tb) {
    //    flex-direction: row;
    //    flex-wrap: wrap;
    //}
    //
    //@include modifier(items-lr-bt) {
    //    flex-direction: row;
    //    flex-wrap: wrap-reverse;
    //}
    //
    //@include modifier(items-rl) {
    //    flex-direction: row-reverse;
    //    flex-wrap: nowrap;
    //}
    //
    //@include modifier(items-rl-tb) {
    //    flex-direction: row-reverse;
    //    flex-wrap: wrap;
    //}
    //
    //@include modifier(items-rl-bt) {
    //    flex-direction: row-reverse;
    //    flex-wrap: wrap-reverse;
    //}
    //
    //@include modifier(items-tb) {
    //    flex-direction: column;
    //    flex-wrap: nowrap;
    //}
    //
    //@include modifier(items-tb-lr) {
    //    flex-direction: column;
    //    flex-wrap: wrap;
    //}
    //
    //@include modifier(items-tb-rl) {
    //    flex-direction: column;
    //    flex-wrap: wrap-reverse;
    //}

    //@include modifier(items-bt) {
    //    flex-direction: column-reverse;
    //    flex-wrap: nowrap;
    //}

    //@include modifier(items-bt-lr) {
    //    flex-direction: column-reverse;
    //    flex-wrap: wrap;
    //}

    //@include modifier(items-bt-rl) {
    //    flex-direction: column-reverse;
    //    flex-wrap: wrap-reverse;
    //}

    // justify-content

    @include modifier-mixin(halign-items-left) {
        justify-content: flex-start;
    }

    @include modifier-mixin(halign-items-right) {
        justify-content: flex-end;
    }

    @include modifier-mixin(halign-items-center) {
        justify-content: center;
    }

    @include modifier-mixin(halign-items-full) {
        justify-content: space-between;
    }

    @include modifier-mixin(halign-items-even) {
        justify-content: space-around;
    }

    // align-items

    @include modifier-mixin(valign-items-top) {
        align-items: flex-start;
    }

    @include modifier-mixin(valign-items-bottom) {
        align-items: flex-end;
    }

    @include modifier-mixin(valign-items-center) {
        align-items: center;
    }

    @include modifier-mixin(valign-items-baseline) {
        align-items: baseline;
    }

    @include modifier-mixin(valign-items-stretch) {
        align-items: stretch;
    }

    // align-content

    @include modifier-mixin(valign-rows-top) {
        align-content: flex-start;
    }

    @include modifier-mixin(valign-rows-bottom) {
        align-content: flex-end;
    }

    @include modifier-mixin(valign-rows-center) {
        align-content: center;
    }

    @include modifier-mixin(valign-rows-full) {
        align-content: space-around;
    }

    @include modifier-mixin(valign-rows-even) {
        align-content: space-between;
    }

    @include modifier-mixin(valign-rows-stretch) {
        align-content: stretch;
    }

    /**
     * item
     */

    @include child-mixin(item) {

        // defaults

        flex-grow: 0;
        flex-shrink: 0;
        margin: 0.5rem;

        // display

        @include modifier-mixin(hide) {
            display: none;
        }

        // flex grow

        @include modifier-mixin(grow) {
            flex-grow: 1;
        }

        // flex shrink

        @include modifier-mixin(shrink) {
            flex-shrink: 1;
        }

        // align-self

        @include modifier-mixin(valign-top) {
            align-self: flex-start;
        }

        @include modifier-mixin(valign-bottom) {
            align-self: flex-end;
        }

        @include modifier-mixin(valign-center) {
            align-self: center;
        }

        @include modifier-mixin(valign-baseline) {
            align-self: baseline;
        }

        @include modifier-mixin(valign-stratch) {
            align-self: baseline;
        }

        // width

        @include width-mixin(1rem);
    }
}
