@import '../config/variables';
@import '../util/functions';

@mixin parent-mixin($names...) {
    /**
     *
     */
    #{parent-function($names)} {
        @content;
    }

    @for $i from 1 through length($breakpoint-keys) {

        $breakpoint-key: nth($breakpoint-keys, $i);

        @if $i == 1 {
            // first
            $breakpoint-val: nth($breakpoint-vals, $i);

            @media screen and (max-width: $breakpoint-val) {
                #{parent-function($names, $breakpoint-key)} {
                    @content;
                }
            }

        } @else if $i == length($breakpoint-keys) {
             // last
            $breakpoint-prev: nth($breakpoint-vals, $i - 1);

            @media screen and (min-width: $breakpoint-prev) {
                #{parent-function($names, $breakpoint-key)} {
                    @content;
                }
            }

        } @else {
            // middle
            $breakpoint-val: nth($breakpoint-vals, $i);
            $breakpoint-prev: nth($breakpoint-vals, $i - 1);

            @media screen and (min-width: $breakpoint-prev) and (max-width: $breakpoint-val) {
                #{parent-function($names, $breakpoint-key)} {
                    @content;
                }
            }

            @media screen and (min-width: $breakpoint-prev) {
                #{parent-function($names, $breakpoint-key + '-up')} {
                    @content;
                }
            }

            @media screen and (max-width: $breakpoint-val) {
                #{parent-function($names, $breakpoint-key + '-down')} {
                    @content;
                }
            }
        }
    }
}

@mixin child-mixin($names...) {
    /**
     *
     */
    @at-root #{child-function(&, $names)} {
        @content;
    }
}

@mixin child-dest-mixin($destination, $names...) {
    /**
     *
     */
    @at-root #{$destination} #{child-function(&, $names)} {
        @content;
    }
}

@mixin modifier-mixin($names...) {
    /**
     *
     */
    @at-root #{modifier-function(&, $names)} {
        @content;
    }
}

@mixin width-mixin($val) {

    @include modifier-mixin(width-1\/12) {
        flex-basis: calc(8.33% - #{$val});
    }

    @include modifier-mixin(width-2\/12, width-1\/6) {
        flex-basis: calc(16.66% - #{$val});
    }

    @include modifier-mixin(width-3\/12, width-1\/4) {
        flex-basis: calc(25% - #{$val});
    }

    @include modifier-mixin(width-1\/5) {
        flex-basis: calc(20% - #{$val});
    }

    @include modifier-mixin(width-4\/12, width-1\/3) {
        flex-basis: calc(33.33% - #{$val});
    }

    @include modifier-mixin(width-2\/5) {
        flex-basis: calc(40% - #{$val});
    }

    @include modifier-mixin(width-5\/12) {
        flex-basis: calc(41.66% - #{$val});
    }

    @include modifier-mixin(width-6\/12, width-1\/2) {
        flex-basis: calc(50% - #{$val});
    }

    @include modifier-mixin(width-7\/12) {
        flex-basis: calc(58.33% - #{$val});
    }

    @include modifier-mixin(width-3\/5) {
        flex-basis: calc(60% - #{$val});
    }

    @include modifier-mixin(width-8\/12, width-2\/3) {
        flex-basis: calc(66.66% - #{$val});
    }

    @include modifier-mixin(width-9\/12, width-3\/4) {
        flex-basis: calc(75% - #{$val});
    }

    @include modifier-mixin(width-4\/5) {
        flex-basis: calc(80% - #{$val});
    }

    @include modifier-mixin(width-10\/12, width-5\/6) {
        flex-basis: calc(83.33% - #{$val});
    }

    @include modifier-mixin(width-11\/12) {
        flex-basis: calc(91.66% - #{$val});
    }

    @include modifier-mixin(width-12\/12, width-1\/1) {
        flex-basis: calc(100% - #{$val});
    }
}
