@import "variables";

//

[container] {
    display: flex;
    flex-direction: row;
    flex-wrap: nowrap;
    justify-content: flex-start;
}




/*
 *
 */

[container__item] {
    display: block;
}

/*

container

container--xs-down
container--xs

container--sm
container--sm-down

container--md-down
container--md

container--lg-down
container--lg

container--xl-down
container--xl

@media >= xs {
    container--xs-up
}

@media >= sm {
    container--sm-up
}

@media >= md {
    container--md-up
}

@media >= lg {
    container--lg-up
}

@media >= xl {
    container--xl-up
}

*/

[container] {
    display: flex;
    flex-wrap: nowrap;
}

[container~='inline'] {
    display: inline-flex;
}

[container~='hide'] {
    display: none;
}

[container~='rows'] {
    flex-wrap: wrap;
}

[container~='rows-rev'] {
    flex-wrap: wrap-reverse;
}



@each $key, $val in $breakpoints {

    @media screen and (min-width: $breakpoint) {

        [container--#{$key}~='row'] {
            flex-direction: row;
            flex-wrap: nowrap;
        }

        [container--#{$key}~='row-rev'] {
            flex-direction: row-reverse;
        }

        [container--#{$key}~='col'] {
            flex-direction: column;
        }

        [container--#{$key}~='col-rev'] {
            flex-direction: column-reverse;
        }

        // direction

        [container--#{$key}~='row'] {
            flex-direction: row;
        }

        [container--#{$key}~='row-rev'] {
            flex-direction: row-reverse;
        }

        [container--#{$key}~='col'] {
            flex-direction: column;
        }

        [container--#{$key}~='col-rev'] {
            flex-direction: column-reverse;
        }

        // wrap

        [container--#{$key}~='no-wrap'] {

        }

        [container--#{$key}~='wrap'] {
            flex-wrap: wrap;
        }

        [container--#{$key}~='wrap-rev'] {
            flex-wrap: wrap-reverse;
        }

        // justify

        [container--#{$key}~='start'] {
            justify-content: flex-start;
        }

        [container--#{$key}~='end'] {
            justify-content: flex-end;
        }

        [container--#{$key}~='center'] {
            justify-content: center;
        }

        [container--#{$key}~='equal-spacing'] {
            justify-content: space-between;
        }

        [container--#{$key}~='equal-spacing'] {
            justify-content: space-around;
        }

    }
        // item

    @media (min-width: $breakpoint) {
        [container__item~='hide--#{$key}-up'] {
            display: none;
        }
    }

    @media (max-width: $breakpoint) {
        [container__item~='hide--#{$key}-up'] {
            display: none;
        }
    }

}

@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {
    $min: breakpoint-min($name, $breakpoints);
    @if $min {
        @media (min-width: $min) {
            @content;
        }
    } @else {
        @content;
    }
}

@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {
    $max: breakpoint-max($name, $breakpoints);
    @if $max {
        @media (max-width: $max) {
            @content;
        }
    } @else {
        @content;
    }
}

@mixin set-container($key) {

    // direction

    [container~='row--#{$key}'] {
        flex-direction: row;
    }

    [container~='row-rev--#{$key}'] {
        flex-direction: row-reverse;
    }

    [container~='col--#{$key}'] {
        flex-direction: column;
    }

    [container~='col-rev--#{$key}'] {
        flex-direction: column-reverse;
    }

    // wrap

    [container~='no-wrap--#{$key}'] {
        flex-wrap: nowrap;
    }

    [container~='wrap--#{$key}'] {
        flex-wrap: wrap;
    }

    [container~='wrap-rev--#{$key}'] {
        flex-wrap: wrap-reverse;
    }
}